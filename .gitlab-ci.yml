# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


variables:
    VERCEL_TOKEN: MkY7zfiztYQsUxHMPbS4D50f
    VERCEL_ORG_ID: lGlSAuUd69gWNYH4bSL9RPMe
    VERCEL_PROJECT_ID: prj_Po18EFe36ruMtfk9hiKQUTM5ruMU
    
stages:          # List of stages for jobs, and their order of execution
  # - build
  - deploy

# build-job:       # This job runs in the build stage, which runs first.
#   stage: build
#   script:
#     - export NVM_DIR="$HOME/../pp1722/.nvm" && . "$NVM_DIR/nvm.sh" --no-use #load nvm
#     - nvm use v18.0.0
#     - npm ci
#     - npm run build


deploy_preview:
  stage: deploy
  except:   # This creates preview environments on commits pushed to a git branch
    - master
  script:
    - export NVM_DIR="$HOME/../pp1722/.nvm" && . "$NVM_DIR/nvm.sh" --no-use #load nvm
    - nvm use v18.0.0
    - echo "Vercel git branch "
    - sudo npm install --global vercel
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt  --token=$VERCEL_TOKEN


deploy_production:
  stage: deploy
  only:  # This creates production environments on commits to the main branch
    - master
  script:
     - export NVM_DIR="$HOME/../pp1722/.nvm" && . "$NVM_DIR/nvm.sh" --no-use #load nvm
     - nvm use v18.0.0
     - echo "Vercel master"
     - sudo npm install --global vercel
     - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
     - vercel build --prod --token=$VERCEL_TOKEN
     - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
     - echo "Vercel deployed"
